Trut is a simple tool for keeping data in tagged structures with
use of hardlinks.

The main dedication is to keep files int the directory organised with
some tags. So if you have for instance book 'Mathematical basics of
physics' you can put it both into 'math' and 'physics' folders, the
trut will find identical files and replace them with hard links.

The main advantages over many file-tagging frameworks is:
1. you are not bound to certain DE or file manager which will show you
needed tags;
2. once tag tree is initialised the needed way you can operate with
tagged files like with absolutely ordinary file structure: creating
directories (which will be interpreted as tags and subtags), placing
and moving files between different tags. The only thing you need once
in a while update trut structure. All configurations and data will
be stored in '.trut' directory;
3. selected viewable tags will stay that way until you will manually
choose to hide them (while in other tagging systems you need to look
for needed tags each time).


STRUCTURE

All meta information will be stored in '.trut' directory. It is organised
like:

.trut/
+ meta
+ storage
| + <file-0-md5>
| + <file-1-md5>
| + <file-2-md5>
| + <file-3-md5>
| + ...
+ config

Here 'meta' file contains info about each file under trut control
(its tags, description if there is such and else) and each tag (tag
class, description if there is such and other). This file is organised
in form of sqlite database.

Files 'file-n-md5' are just files. It is the base in which all files
are situated. The names are md5 made for this files last trut
update.

Config file 'config' contains all current trut settings in simple
text format.


COMMANDS

init - initialize trut in current directory. All files will be
    automaitcly registered and tags for each directory will be created.

update [PATH] - update trut state. Register all changes (newly
    added and removed files/tags). Optionally path to update may be
    passed. In this case only files and tags placed there will be
    rechecked in tag tree.

reveal TAG|TAG_EXPR - this will create directory TAG in current path
    which will represent specified tag. It also will reveal all
    subtags so

    $ trut reveal books

    will create directory 'book' with all subtags like 'datasheets',
    'languages' etc.

    You also can reveal certain subtags like it is usual tags (which
    it is).  To reveal only needed subtags in some tag one can use

    $ trut reveal TAG/SUBTAG

    For instance

    $ trut reveal books/datasheets
    $ trut reveal books/languages

    will create only 'datasheets' and 'languages' in directory 'books'
    without other subtags like 'fiction' or 'math'.

    In place of tag name to reveal some binary expression can be
    used. In this case option --as NAME must also be used to specify
    desired name for revealed tag. For example to reveal tag
    'literature' which will contain both 'fiction' and 'fantasy' one
    can use:

    $ trut reveal --as literature fiction -a fantasy

    You can see full description of binary operations with tags in
    section 'Tag expressions'.

    Note that this way of revealing created through expressions tags
    isn't permanent, it will be terminated after first 'trut hide'
    on this tag. To use permanent expression-originated tags one can
    use 'alias' command. It is also possible to use 'create' in case
    new tag must contain only current slice of files that satisfy
    specified tag expression.

    Options:
        --as NAME  Reveal tag with specified pseudonym


hide TAG - apposite to 'reveal' command. Deletes tag directory but not
    complitely - it can be restored with 'reveal' again any time.

alias ALIAS_NAME TAG_EXPR - create alias for tag expression. Created
    aliased tag will be all the time equivalen to expression (with
    periodical 'update' command calls of course). For example if you
    have file-1.txt in tag-1 and file-2.txt in tag-2 then after

    $ trut alias tag-new tag-1 -a tag-2

    created tag-new will contain both tag-1 and tag-2. In case you
    will place new file file-3.txt into tag-1 after update it will
    appear also in tag-new.

create TAG_NAME [TAG_EXPR] - create new tag based on specified tag
    expression. In difference with 'alias' command 'create' will
    permanently create absolutly ordinary tag which will contain all
    files that satisfy tag expression. In comparison with 'alias' if
    you have file-1.txt in tag-1 and file-2.txt in tag-2 then after

    $ trut create tag-new tag-1 -a tag-2

    you will have also both file-1.txt and file-2.txt in created
    tag-new tag. But if you will add file-3.txt to tag-1 it will not
    appear at tag-new.

    Tag expression can be ommitted. In this case simple empty tag
    TAG_NAME will be created.

destroy TAG... - fully destroy specified tag. It will not be possible
    to resurrect it with 'reveal' afterwords. Files that was stored
    only in deleted tag will be deleted from trut completly.  More
    that one tag can be passed for destruction. Destruction of tag
    means also destruction of all subtags if they are not parented by
    some other tag (or in top-level).

config VARIABLE VALUE - customize trut by specifying value for all
    customizing variables.

    Options:
        --global - change global tatree options instead of local to
                   particular trut instance.

show [TAG] - show info about specified tag (subtags, files owned, date
    of creation).
    Options:
        --all - print all available info
        --files - print all files contained in this tag

help [COMMAND] - show this help. If command specified - print help for
    it.


TAG EXPRESSIONS

Tag expressions can be used for applying boolean operations on tags as
sets of files. For each basic operation there is two crutial moments:
whilch files will be shown in created that way tag and to which tags
file will be placed if it will be created at this expression tag.

Basic operations:

-a - AND. Show files which are present both in tag-1 and tag-2. When
added file will be placed both into tag-1 and tag-2.

-o - OR. Show files which are present in tag-1 or in tag-2. Added file
will be placed both into tag-1 and tag-2.

-n - NOT. Show files which are present anywhere but in tag-1. Added
file will be placed in all other tags except tag-1.

-w - WITHOUT. [boolean subtraction. TODO: must be overchecked]. Same
as OR NOT. Will show files that belong to tag-1 but not belong to
tag-2. Added file will be added to tag-1.


BASIC USAGE

Initialise trut structure in current path:

$ trut init

Update trut structure according to the current directory content:

$ trut update

Hide tag:

$ trut hide <tag>

This will delete directory <tag>. Files of this tag will still be
there but you will see them only in .all directory if it exists. This
tag directory can be re-created again with next command.

Show tag:

$ trut reveal <tag>


CONFIGURATION

Trut configuration presented in several levels: global
(/etc/trut.conf), user (~/.trut) and trut instance
(<trut-dir>/.trut/config).
